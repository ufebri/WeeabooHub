plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

def apikeyPropertiesFile = rootProject.file("config.properties")
def configProperties = new Properties()
configProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdk 33
    defaultConfig {
        applicationId "com.raytalktech.weeaboohub"
        minSdkVersion 21
        //noinspection OldTargetApi
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias configProperties['releaseKeyAlias']
            keyPassword configProperties['releaseKeyPassword']
            storeFile file(configProperties['releaseKeyStore'])
            storePassword configProperties['releaseStorePassword']
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue("string", "ads_application_id", configProperties["APPLICATION_ID_ADS"])
            resValue("string", "admob_banner_id", configProperties["ADMOB_BANNER_ID"])
            resValue("string", "admob_native_id", configProperties["ADMOB_NATIVE_ID"])
            signingConfig signingConfigs.release
        }

        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue("string", "ads_application_id", configProperties["APPLICATION_ID_ADS"])
            resValue("string", "admob_banner_id", configProperties["ADMOB_BANNER_ID"])
            resValue("string", "admob_native_id", configProperties["ADMOB_NATIVE_ID"])
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.fragment:fragment:1.3.0'

    //Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'

    implementation 'com.google.android.material:material:1.4.0'
    implementation "com.github.bumptech.glide:glide:4.12.0"

    // Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.9.3'

    // Retrofit with Moshi Converter
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"


    //Offline - Room
    implementation "androidx.room:room-runtime:2.3.0"
    kapt "androidx.room:room-compiler:2.2.3"

    implementation 'com.github.ufebri:Android-Base-Prime:0.0.3'

    //Splashscreen
    implementation "androidx.core:core-splashscreen:1.0.1"

    implementation platform('com.google.firebase:firebase-bom:32.3.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
}
